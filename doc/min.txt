最小配置

1、spring security最小配置初始化的入口为SpringBootWebSecurityConfiguration类开始的。执行注解上面导入的SpringWebMvcImportSelector类，最终执行WebMvcSecurityConfiguration
2、执行WebMvcSecurityConfiguration#BeanDefinitionRegistryPostProcessor后置处理器，这里会将BeanDefinition的信息注入到Spring容器中，Bean名称为springSecurityFilterChain。即CompositeFilterChainProxy和org.springframework.security.config.annotation.web.configuration.WebMvcSecurityConfiguration$HandlerMappingIntrospectorCachFilterFactoryBean，org.springframework.security.config.annotation.web.configuration.WebSecurityConfiguration.springSecurityFilterChain()然后进行实例化org.springframework.boot.autoconfigure.security.servlet.SecurityFilterAutoConfiguration#securityFilterChainRegistration()
3、执行org.springframework.boot.web.servlet.ServletContextInitializerBeans#addServletContextInitializerBean()方法，将org.springframework.boot.web.servlet.AbstractFilterRegistrationBean#addRegistration()方法将DelegatingFilterProxyRegistrationBean添加到org.apache.catalina.core.ApplicationContext中，最终添加到org.apache.catalina.core.StandardContext中的 filterDefs用于进行过滤使用
4、进行实例化DefaultAuthenticationEventPublisher,执行的代码为org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration#authenticationEventPublisher()用于进行事件发布
5、进行enableGlobalAuthenticationAutowiredConfigurer，InitializeUserDetailsBeanManagerConfigurer和InitializeAuthenticationProviderBeanManagerConfigurer实例化，并添加到globalAuthConfigurers集合中，然后进行AuthenticationManagerBuilder实例化，同时实例化DefaultAuthenticationEventPublisher，即实例化DefaultPasswordEncoderAuthenticationManagerBuilder
6、进行HttpSecurityConfiguration#HttpSecurity实例化，最终执行org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration#defaultSecurityFilterChain()进行实例化SecurityFilterChain
7、将SecurityFilterChain注入到springSecurityFilterChain中，同时实例化委托监听器  DelegatingApplicationListener,






WebSecurityConfiguration


WebSecurityConfiguration进行实例化监听器DelegatingApplicationListener
ObjectPostProcessorConfiguration实例化AutowireBeanFactoryObjectPostProcessor 作用用于将实例化的对象交给Spring管理，后续可以通过Spring容器直接获取
SecurityAutoConfiguration实例化DefaultAuthenticationEventPublisher


4、进行实例化DefaultAuthenticationEventPublisher,执行的代码为org.springframework.boot.autoconfigure.security.servlet.SecurityAutoConfiguration#authenticationEventPublisher()用于进行事件发布

5、进行enableGlobalAuthenticationAutowiredConfigurer，InitializeUserDetailsBeanManagerConfigurer和InitializeAuthenticationProviderBeanManagerConfigurer实例化，并添加到globalAuthConfigurers集合中，然后进行AuthenticationManagerBuilder实例化，同时实例化DefaultAuthenticationEventPublisher，即实例化DefaultPasswordEncoderAuthenticationManagerBuilder
6、进行HttpSecurityConfiguration#HttpSecurity实例化，最终执行org.springframework.boot.autoconfigure.security.servlet.SpringBootWebSecurityConfiguration#defaultSecurityFilterChain()进行实例化SecurityFilterChain


7、将SecurityFilterChain注入到springSecurityFilterChain中，同时实例化委托监听器  DelegatingApplicationListener,




执行
org.springframework.boot.web.servlet.ServletContextInitializerBeans#addServletContextInitializerBean()

MultiValueMap<Class<?>, ServletContextInitializer> initializers,其中type为 jakarta.servlet.Filter
加入到tomcat中filter






https://www.cnblogs.com/chengxuxiaoyuan/p/17300575.html
https://www.zido.site/blog/2020-04-09--spring-security-2/

#ConditionalOnBean
https://baijiahao.baidu.com/s?id=1737289611551294394&wfr=spider&for=pc
